// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        Int      @id @default(autoincrement())
  nombre    String
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
}

model Producto {
  id                Int                      @id @default(autoincrement())
  nombre            String
  precio            Float
  stock             Int
  pedidos           Pedido[]                 @relation("ProductoPedidos")
  proveedorId       Int?
  proveedor         Proveedor?               @relation("ProveedorProductos", fields: [proveedorId], references: [id])
  notificaciones    StockBajoNotificacion[]  @relation("ProductoNotificaciones")
}

model Cliente {
  id      Int      @id @default(autoincrement())
  nombre  String
  email   String
  pedidos Pedido[]
}

model Pedido {
  id          Int        @id @default(autoincrement())
  cliente_id  Int
  fecha_pedido DateTime  @default(now())
  Cliente     Cliente    @relation(fields: [cliente_id], references: [id])
  productos   Producto[] @relation("ProductoPedidos")
}

model Proveedor {
  id        Int        @id @default(autoincrement())
  nombre    String
  contacto  String?
  telefono  String?
  direccion String?
  productos Producto[] @relation("ProveedorProductos")
}

model StockBajoNotificacion {
  id          Int      @id @default(autoincrement())
  producto    Producto @relation("ProductoNotificaciones", fields: [productoId], references: [id])
  productoId  Int
  creadoEn    DateTime @default(now())
  status      String   @default("Pendiente")
}


